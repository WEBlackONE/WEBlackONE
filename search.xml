<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>模板模式进行cbs.deal到ebs数据迁移的总结和应用</title>
      <link href="/2018/07/16/cai-yong-mo-ban-mo-shi-jin-xing-cbs-dao-ebs-shu-ju-qian-yi-de-zong-jie-he-ying-yong/"/>
      <url>/2018/07/16/cai-yong-mo-ban-mo-shi-jin-xing-cbs-dao-ebs-shu-ju-qian-yi-de-zong-jie-he-ying-yong/</url>
      
        <content type="html"><![CDATA[<h3 id="一-模板模式进行cbs-deal到ebs数据迁移的总结和应用"><a href="#一-模板模式进行cbs-deal到ebs数据迁移的总结和应用" class="headerlink" title="一.模板模式进行cbs.deal到ebs数据迁移的总结和应用"></a>一.模板模式进行<code>cbs.deal</code>到<code>ebs</code>数据迁移的总结和应用</h3><h3 id="1-预热部分"><a href="#1-预热部分" class="headerlink" title="1.预热部分"></a>1.预热部分</h3><h4 id="1-1-简单粗暴理解一下模板模式"><a href="#1-1-简单粗暴理解一下模板模式" class="headerlink" title="1.1.简单粗暴理解一下模板模式"></a>1.1.简单粗暴理解一下模板模式</h4><blockquote><p>有一些操作，他们的流程都是固定的，就那么几步，我们把固定的流程提取出来，做成一个模板，之后的具体到某个操作，直需要在流程中丰富这个操作的细节即可。</p></blockquote><h4 id="1-2-举个例子："><a href="#1-2-举个例子：" class="headerlink" title="1.2.举个例子："></a>1.2.举个例子：</h4><p>比方我们平时炒菜就那么几步：1.起锅烧油—&gt;&gt;&gt;2.放菜3.炒—&gt;&gt;&gt;4.出锅装盘</p><p>把这个流程提起成一个模板，</p><p>如果我们要抄青菜，在步骤2中就放入青菜，出锅的就是炒青菜</p><p>如果要炒土豆丝，就在步骤2中放入土豆丝，出锅的就是炒土豆丝</p><h4 id="1-3-一个不知名的小demo"><a href="#1-3-一个不知名的小demo" class="headerlink" title="1.3.一个不知名的小demo"></a>1.3.一个不知名的小demo</h4><h5 id="1-3-1-确认流程"><a href="#1-3-1-确认流程" class="headerlink" title="1.3.1.确认流程"></a>1.3.1.确认流程</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> 炒菜模板_baseHandler  <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//定义流程步骤</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> 炒菜流程<span class="token function">_handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">// 1</span>            起锅烧油<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//2</span>            放菜<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//3</span>            炒<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//4</span>            出锅装盘<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> 起锅烧油<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"起锅烧油操作-->>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//需要子类重写具体实现</span>    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> 放菜<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> 炒<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"炒菜时间到-->>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> 出锅装盘<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"出锅装盘!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="1-3-2-一个具体的实现"><a href="#1-3-2-一个具体的实现" class="headerlink" title="1.3.2.一个具体的实现"></a>1.3.2.一个具体的实现</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 炒土豆丝_土豆丝Handler <span class="token keyword">extends</span> 炒菜模板_baseHandler<span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> 放菜<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"放入土豆丝"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li><p>什么情况下可以应用模板模式：</p><ul><li>1.有固定的流程</li></ul></li><li><p>模板模式的实践流程：</p><ul><li><p>1.要做个什么事儿？（要炒菜）</p></li><li><p>2.要怎么做？（炒菜的流程）</p></li><li><p>3.具体要做个什么事情？（要炒土豆丝）</p></li></ul></li></ul><h3 id="2-重头戏"><a href="#2-重头戏" class="headerlink" title="2.重头戏"></a>2.重头戏</h3><p>下面就按<code>1</code>的总结流程3步骤来实现我们这次cbs-&gt;ebs数据迁移的工作。</p><h4 id="2-1-要做个什么事儿？"><a href="#2-1-要做个什么事儿？" class="headerlink" title="2.1.要做个什么事儿？"></a>2.1.要做个什么事儿？</h4><blockquote><p>把<code>cbs.deal</code>库中写好的视图提取出的数据导入到业财的<code>ebs</code>库中。</p></blockquote><p><img src="assets/1562120772663.png" alt="1562120772663"></p><p>看起来有点太简单粗暴，就好像占山为王的老土匪（ebs）直接把村长的女儿抢到手（cbs.deal.视图），有点无耻。</p><p>更妥当的做法应该是娶的时候和老村长提个亲（把主表的状态更新为syncing），告诉村长我要娶了。最好是合法一下，到民政局去登记（记录在批量表），这么重要的日子也应该纪念一下（记录在日志表），最后事情的结果怎么样，也应该告知一声老村长，顺风顺水，完美成功（就把主表的状态更新为synced），如果是婚检检出了遗传病，这事儿就凉了（把主表的状态更新为error），下面我们对迁移步骤做一次升级处理：</p><p><img src="assets/1562122104301.png" alt="1562122104301"></p><p>升级处理以后我们的流程也基本确定下来了。</p><h3 id="2-要怎么做？"><a href="#2-要怎么做？" class="headerlink" title="2.要怎么做？"></a>2.要怎么做？</h3><h5 id="2-1-迁移数据的流程："><a href="#2-1-迁移数据的流程：" class="headerlink" title="2.1.迁移数据的流程："></a>2.1.迁移数据的流程：</h5><ol><li>获取相应的视图数据</li><li>ebs批表插入数据</li><li>更新原始主表的同步状态（syncing）</li><li>传输数据到ebs数据表中<ol><li>传输成功<ol><li>更新主表的同步状态（synced）</li></ol></li><li>传输失败<ol><li>更新主表的同步状态（error）</li></ol></li></ol></li><li>记录日志</li></ol><h3 id="3-具体要做个什么事情？"><a href="#3-具体要做个什么事情？" class="headerlink" title="3.具体要做个什么事情？"></a>3.具体要做个什么事情？</h3><blockquote><p>到某一件具体的事情就是实例化的过程。实现的过程就是把流程中不能确定的信息（抽象概括的信息）确认下来的过程</p></blockquote><h4 id="举例：要迁移合同信息的数据"><a href="#举例：要迁移合同信息的数据" class="headerlink" title="举例：要迁移合同信息的数据"></a>举例：要迁移合同信息的数据</h4><p>流程中不能确定的信息有那些：</p><p><strong>1.获取相应的视图数据</strong></p><p>​    1.我们确认下来获取合同的视图是 <code>ebs_ar_contract</code></p><p><strong>2.需要更新的主表不确定</strong></p><p>​    1.我们要确认下来合同视图的主表是哪一个<code>ebs_ar_contract</code>视图对应的主表是  <code>deal.cr_case_info</code></p><table><thead><tr><th>序号</th><th align="left">视图名</th><th>视图注解</th><th>库表名</th><th>表注释</th><th>备注</th></tr></thead><tbody><tr><td>01</td><td align="left">ebs_ar_contract</td><td>合同信息</td><td><strong>deal.cr_case_info</strong></td><td>案件信息</td><td></td></tr><tr><td>02</td><td align="left">ebs_ar_receipts_receipt</td><td>收款信息</td><td><strong>deal.fin_receipt</strong></td><td>实收明细</td><td></td></tr><tr><td>03</td><td align="left">ebs_ar_receipts_statement</td><td>收款信<strong>息</strong></td><td><strong>deal.fin_receipt_statement</strong></td><td>实收流水</td><td></td></tr><tr><td>04</td><td align="left">ebs_ar_refund_espense</td><td>退款信息</td><td><strong>deal.fin_refund</strong></td><td>退款</td><td>待确认</td></tr><tr><td>05</td><td align="left">ebs_ar_refund_statement</td><td>退款信息</td><td><strong>deal.fin_refund_statement</strong></td><td>退款</td><td></td></tr><tr><td>06</td><td align="left">ebs_ar_revenue_invoice</td><td>收入信息</td><td><strong>deal.fin_recv_invoice_info</strong></td><td>开票信息</td><td></td></tr><tr><td>07</td><td align="left">ebs_ar_revenue_receive</td><td>收入信息</td><td><strong>deal.cr_receivable</strong></td><td>应收明细</td><td></td></tr><tr><td>08</td><td align="left">ebs_gl_payment_expense</td><td>业务付款</td><td><strong>deal.fin_payment</strong></td><td>付款</td><td></td></tr><tr><td>09</td><td align="left">ebs_gl_payment_payment</td><td>业务付款</td><td><strong>deal.fin_payment_statement</strong></td><td>付款明细</td><td></td></tr></tbody></table><p>3.迁移到业财ebs的表中不确定</p><p>​    1.确定业财的合同表 CUX_EBS_AR_CONTRACT_IFACE</p><p><strong>到代码中就是确定：</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseHandler</span><span class="token operator">&lt;</span>D <span class="token keyword">extends</span> <span class="token class-name">BaseDealEntity</span><span class="token punctuation">,</span> E <span class="token keyword">extends</span> <span class="token class-name">BaseEbsEntity</span><span class="token punctuation">,</span>R <span class="token keyword">extends</span> <span class="token class-name">BaseCbsEntity</span><span class="token operator">></span> </code></pre><p>1.<strong>BaseDealEntity</strong> 获取视图实体 eg：子类&gt; 合同：<code>EbsArContractEntity</code></p><p>2.<strong>BaseEbsEntity</strong>  业财ebs表的实体 eg: 子类&gt;合同：<code>CuxEbsArContractIfaceEntity</code></p><p>3.<strong>BaseCbsEntity</strong> 需要更新的主表实体  子类&gt;合同：<code>CrCaseInfo</code></p><h4 id="需要留意的几个地方："><a href="#需要留意的几个地方：" class="headerlink" title="需要留意的几个地方："></a>需要留意的几个地方：</h4><p>1.视图必须带有主表的id（sync_id）,用于之后的主表状态更新</p><p>2.多数据源，不是service实现类中，最好不要写lambda表达式，可能会识别不出来具体到哪一个库。</p><p>WUCf7MGyZiD3l1XMaY</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作总结 </tag>
            
            <tag> 模板模式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
